{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?fa04","webpack:///./src/components/Grid.vue?b98b","webpack:///./src/assets/js/helpers.js","webpack:///./src/components/GridCell.vue?459c","webpack:///src/components/GridCell.vue","webpack:///./src/components/GridCell.vue?386f","webpack:///./src/components/GridCell.vue","webpack:///src/components/Grid.vue","webpack:///./src/components/Grid.vue?312d","webpack:///./src/components/Grid.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/App.vue?c650","webpack:///./src/components/GridCell.vue?116f","webpack:///./src/components/Grid.vue?df58"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","_s","startCell","endCell","on","dijkstra","init","resultMessage","_e","staticRenderFns","style","$event","ctrlKey","shiftKey","altKey","metaKey","handleMouseDown","handleMouseUp","_l","gridCell","handleCellShiftClick","handleCellAltClick","throttle","func","limit","inThrottle","args","arguments","context","setTimeout","debounce","wait","immediate","timeout","later","callNow","clearTimeout","lineLine","x1","y1","x2","y2","x3","y3","x4","y4","uA","uB","lineRect","rx","ry","rw","rh","left","right","top","bottom","class","computedClass","$emit","distance","coordinates","tile","props","default","debug","type","Boolean","computed","classes","unvisited","join","component","components","GridCell","gridWidth","gridHeight","gridSize","actualGridSizeX","actualGridSizeY","grid","mouseDown","mouseDownInitialCellTile","previousMousePosition","currentMousePosition","pathDrawSpeed","drawing","abortDrawing","calculating","abortCalculating","flatGrid","forEach","gridRow","styleObject","gridTemplateColumns","gridTemplateRows","mounted","addEventListener","handleWindowResize","destroyed","removeEventListener","methods","calculateGridSize","resetGrid","$nextTick","calculateActualGridSize","Math","floor","innerWidth","subGrid","setStartCell","setEndCell","removePath","resetCell","split","cell","getCell","document","handleSingleClick","event","setMousePosition","x","mouseX","gridX","y","mouseY","gridY","handleMouseMove","calculateAffectedCells","allGridCells","totalWidth","offsetWidth","cellCount","totalHeight","offsetHeight","posX","isIntersecting","setTile","posY","newCell","DISTANCE","current","calculateDistance","calculatePath","currentDistance","smallestDistance","path","loop","reverse","drawPath","gridCol","sleep","Promise","resolve","timeInMs","Grid","showDebugger","Vue","config","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.a4f9aa18.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/pathvis/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[(_vm.showDebugger)?_c('div',{staticClass:\"debug\"},[_vm._v(\" startCell: \"+_vm._s(_vm.startCell)),_c('br'),_vm._v(\" endCell: \"+_vm._s(_vm.endCell)+\" \"),_c('br'),_c('br'),_c('span',{on:{\"click\":_vm.dijkstra}},[_vm._v(\"Start Dijkstra\")]),_c('br'),_c('br'),_c('span',{on:{\"click\":_vm.init}},[_vm._v(\"Reset\")]),_c('br'),_c('br'),_c('div',[_vm._v(\"Result message: \"+_vm._s(_vm.resultMessage))])]):_vm._e(),_c('Grid')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"Grid\",style:(_vm.styleObject),attrs:{\"id\":\"grid\"},on:{\"mousedown\":function($event){if($event.ctrlKey||$event.shiftKey||$event.altKey||$event.metaKey){ return null; }return _vm.handleMouseDown($event)},\"mouseup\":function($event){if($event.ctrlKey||$event.shiftKey||$event.altKey||$event.metaKey){ return null; }return _vm.handleMouseUp($event)}}},_vm._l((_vm.flatGrid),function(gridCell){return _c('GridCell',{key:(\"Grid__cell__(\" + (gridCell.coordinates) + \")\"),attrs:{\"data\":gridCell},on:{\"shiftClick\":function($event){return _vm.handleCellShiftClick(gridCell)},\"altClick\":function($event){return _vm.handleCellAltClick(gridCell)}}})}),1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const throttle = (func, limit) => {\n  let inThrottle;\n  return function() {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n};\n\nexport const debounce = (func, wait, immediate) => {\n  var timeout;\n  return function() {\n    var context = this,\n      args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexport const lineLine = (x1, y1, x2, y2, x3, y3, x4, y4) => {\n  // calculate the distance to intersection point\n  const uA =\n    ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) /\n    ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n  const uB =\n    ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) /\n    ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n\n  // if uA and uB are between 0-1, lines are colliding\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const lineRect = (x1, y1, x2, y2, rx, ry, rw, rh) => {\n  // check if the line has hit any of the rectangle's sides\n  // uses the Line/Line function below\n  let left = lineLine(x1, y1, x2, y2, rx, ry, rx, ry + rh);\n  let right = lineLine(x1, y1, x2, y2, rx + rw, ry, rx + rw, ry + rh);\n  let top = lineLine(x1, y1, x2, y2, rx, ry, rx + rw, ry);\n  let bottom = lineLine(\n    x1,\n    y1,\n    x2,\n    y2,\n    rx,\n    ry + rh,\n    rx + rw,\n    ry + rh,\n  );\n\n  // if ANY of the above are true, the line\n  // has hit the rectangle\n  if (left || right || top || bottom) {\n    return true;\n  }\n  return false;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.computedClass,on:{\"click\":[function($event){if($event.ctrlKey||$event.shiftKey||$event.altKey||$event.metaKey){ return null; }return _vm.$emit('click')},function($event){if(!$event.shiftKey){ return null; }if($event.ctrlKey||$event.altKey||$event.metaKey){ return null; }return _vm.$emit('shiftClick')},function($event){if(!$event.altKey){ return null; }if($event.ctrlKey||$event.shiftKey||$event.metaKey){ return null; }return _vm.$emit('altClick')}],\"mouseover\":function($event){if($event.ctrlKey||$event.shiftKey||$event.altKey||$event.metaKey){ return null; }return _vm.$emit('mouseover')}}},[(_vm.debug)?[(_vm.data.distance && _vm.data.distance !== 999999)?[_vm._v(\" \"+_vm._s(_vm.data.distance)+\" \"),_c('small',[_vm._v(_vm._s(_vm.data.coordinates))])]:_vm._e(),_c('small',[_vm._v(_vm._s(_vm.data.tile))])]:_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div\n    :class=\"computedClass\"\n    @click.exact=\"$emit('click')\"\n    @click.shift.exact=\"$emit('shiftClick')\"\n    @click.alt.exact=\"$emit('altClick')\"\n    @mouseover.exact=\"$emit('mouseover')\"\n  >\n    <template v-if=\"debug\">\n      <template v-if=\"data.distance && data.distance !== 999999\">\n        {{ data.distance }}\n        <small>{{ data.coordinates }}</small>\n      </template>\n\n      <small>{{ data.tile }}</small>\n    </template>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    data: {\n      default: {},\n    },\n\n    debug: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    computedClass() {\n      let classes = ['GridCell'];\n\n      switch (this.data.tile) {\n        case 'WALL':\n          classes.push('GridCell--wall');\n          break;\n\n        case 'START':\n          classes.push('GridCell--start');\n          break;\n\n        case 'END':\n          classes.push('GridCell--end');\n          break;\n\n        case 'PATH':\n          classes.push('GridCell--path');\n          break;\n      }\n\n      if (!this.data.unvisited && this.data.tile === 'NONE')\n        classes.push('GridCell--visited');\n\n      return classes.join(' ');\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.GridCell {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  cursor: pointer;\n  user-select: none;\n\n  background: white;\n  border: 1px solid #ccc;\n\n  transition: background 300ms, border 300ms, color 300ms;\n\n  &--wall {\n    background: black;\n    color: white;\n    border: 1px solid black;\n  }\n\n  &--start {\n    background: #b92828;\n    color: white;\n    border: 1px solid #941717;\n  }\n\n  &--end {\n    background: #43c843;\n    color: white;\n    border: 1px solid #34af34;\n  }\n\n  &--path {\n    background: #5cb3ff;\n    color: white;\n    border: 1px solid #55a6ec;\n  }\n\n  &--visited {\n    background: #e9f0ff;\n    color: white;\n    border: 1px solid #d0ddfb;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GridCell.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GridCell.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GridCell.vue?vue&type=template&id=091d9c74&scoped=true&\"\nimport script from \"./GridCell.vue?vue&type=script&lang=js&\"\nexport * from \"./GridCell.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GridCell.vue?vue&type=style&index=0&id=091d9c74&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"091d9c74\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div\n    id=\"grid\"\n    class=\"Grid\"\n    :style=\"styleObject\"\n    @mousedown.exact=\"handleMouseDown\"\n    @mouseup.exact=\"handleMouseUp\"\n  >\n    <GridCell\n      :data=\"gridCell\"\n      v-for=\"gridCell in flatGrid\"\n      :key=\"`Grid__cell__(${gridCell.coordinates})`\"\n      @shiftClick=\"handleCellShiftClick(gridCell)\"\n      @altClick=\"handleCellAltClick(gridCell)\"\n    />\n  </div>\n</template>\n\n<script>\nimport { throttle, debounce, lineRect } from '@/assets/js/helpers.js';\n\nimport GridCell from '@/components/GridCell.vue';\n\nexport default {\n  components: {\n    GridCell,\n  },\n\n  data() {\n    return {\n      gridWidth: 50,\n      gridHeight: 40,\n      gridSize: 40,\n\n      actualGridSizeX: 0,\n      actualGridSizeY: 0,\n\n      grid: [],\n\n      startCell: '',\n      endCell: '',\n\n      mouseDown: false,\n      mouseDownInitialCellTile: null,\n      previousMousePosition: null,\n      currentMousePosition: null,\n\n      resultMessage: '',\n\n      pathDrawSpeed: 25,\n\n      drawing: false,\n      abortDrawing: false,\n\n      calculating: false,\n      abortCalculating: false,\n    };\n  },\n\n  computed: {\n    flatGrid() {\n      let grid = [];\n      this.grid.forEach(gridRow => {\n        gridRow.forEach(gridCell => {\n          grid.push(gridCell);\n        });\n      });\n\n      return grid;\n    },\n\n    styleObject() {\n      return {\n        gridTemplateColumns: `repeat(${this.gridWidth}, auto)`,\n        gridTemplateRows: `repeat(${this.gridHeight}, auto)`,\n      };\n    },\n  },\n\n  mounted() {\n    this.init();\n    window.addEventListener('resize', this.handleWindowResize);\n  },\n\n  destroyed() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  },\n\n  methods: {\n    init() {\n      this.calculateGridSize();\n      this.resetGrid();\n      this.$nextTick(this.calculateActualGridSize);\n      this.dijkstra();\n    },\n\n    calculateGridSize() {\n      // Calculate grid width and height by window size\n      this.gridWidth = Math.floor(window.innerWidth / this.gridSize);\n      this.gridHeight = Math.floor(\n        window.innerHeight / this.gridSize,\n      );\n    },\n\n    resetGrid() {\n      let grid = [];\n\n      for (let yy = 0; yy < this.gridHeight; yy++) {\n        let subGrid = [];\n        for (let xx = 0; xx < this.gridWidth; xx++) {\n          subGrid.push({\n            tile: 'NONE',\n            coordinates: `${xx},${yy}`,\n            unvisited: true,\n            distance: 999999,\n          });\n        }\n\n        grid.push(subGrid);\n      }\n\n      this.grid = grid;\n\n      this.setStartCell(\n        this.getCell(4, Math.floor(this.gridHeight / 2)),\n      );\n      this.setEndCell(\n        this.getCell(\n          this.gridWidth - 5,\n          Math.floor(this.gridHeight / 2),\n        ),\n      );\n    },\n\n    handleCellShiftClick(cell) {\n      /*\n        if startCell exists and you click the same cell: set cell to NONE and reset startCell\n        if startCell exists and you click a different cell: and set cell to START and set startCell to new coordinates\n        if startCell does not exist: set cell to START and set startCell to new coordinates\n      */\n      if (this.calculating) {\n        this.abortCalculating = true;\n      }\n      if (this.drawing) {\n        this.abortDrawing = true;\n      }\n      this.removePath();\n\n      if (this.startCell !== '') {\n        this.resetCell(this.startCell.split(','));\n\n        if (this.startCell === cell.coordinates) {\n          this.startCell = '';\n        } else {\n          this.setStartCell(cell);\n        }\n      } else {\n        this.setStartCell(cell);\n      }\n\n      setTimeout(this.dijkstra, 100);\n    },\n\n    handleCellAltClick(cell) {\n      /*\n        if endCell exists and you click the same cell: set cell to NONE and reset endCell\n        if endCell exists and you click a different cell: and set cell to END and set endCell to new coordinates\n        if endCell does not exist: set cell to END and set endCell to new coordinates\n      */\n      if (this.calculating) {\n        this.abortCalculating = true;\n      }\n      if (this.drawing) {\n        this.abortDrawing = true;\n      }\n      this.removePath();\n\n      if (this.endCell !== '') {\n        this.resetCell(this.endCell.split(','));\n\n        if (this.endCell === cell.coordinates) {\n          this.endCell = '';\n        } else {\n          this.setEndCell(cell);\n        }\n      } else {\n        this.setEndCell(cell);\n      }\n\n      setTimeout(this.dijkstra, 100);\n    },\n\n    resetCell(coordinates) {\n      this.getCell(coordinates[0], coordinates[1]).tile = 'NONE';\n    },\n\n    setStartCell(cell) {\n      cell.tile = 'START';\n      this.startCell = cell.coordinates;\n    },\n\n    setEndCell(cell) {\n      cell.tile = 'END';\n      this.endCell = cell.coordinates;\n    },\n\n    handleMouseDown(event) {\n      this.mouseDown = true;\n\n      document\n        .getElementById('grid')\n        .addEventListener('mousemove', this.handleMouseMove);\n\n      this.handleSingleClick(event);\n\n      this.removePath();\n\n      if (this.drawing) {\n        this.abortDrawing = true;\n        return;\n      }\n    },\n\n    handleMouseUp() {\n      this.mouseDown = false;\n      this.mouseDownInitialCellTile = null;\n\n      document\n        .getElementById('grid')\n        .removeEventListener('mousemove', this.handleMouseMove);\n\n      this.previousMousePosition = null;\n      this.currentMousePosition = null;\n\n      this.removePath();\n\n      if (this.drawing) {\n        this.abortDrawing = true;\n        return;\n      }\n\n      if (this.calculating) {\n        this.abortCalculating = true;\n      }\n\n      setTimeout(this.dijkstra, 100);\n    },\n\n    setMousePosition(event) {\n      const grid = document.getElementById('grid');\n      const gridX = grid.offsetLeft;\n      const gridY = grid.offsetTop;\n\n      const mouseX = event.x || event.clientX;\n      const mouseY = event.y || event.clientY;\n\n      this.previousMousePosition = this.currentMousePosition;\n      this.currentMousePosition = {\n        x: mouseX - gridX,\n        y: mouseY - gridY,\n      };\n    },\n\n    handleMouseMove: throttle(function(event) {\n      this.setMousePosition(event);\n      this.calculateAffectedCells();\n    }, 50),\n\n    handleWindowResize: debounce(function() {\n      this.abortCalculating = true;\n      if (this.drawing) {\n        this.abortDrawing = true;\n      }\n\n      this.calculateActualGridSize();\n      this.calculateGridSize();\n      this.resetGrid();\n      setTimeout(this.dijkstra, 100);\n    }, 300),\n\n    calculateActualGridSize() {\n      let totalWidth = 0;\n      let totalHeight = 0;\n      const allGridCells = document.querySelectorAll('.GridCell');\n      const cellCount = allGridCells.length;\n\n      allGridCells.forEach(cell => {\n        totalWidth += cell.offsetWidth;\n      });\n      this.actualGridSizeX = totalWidth / cellCount;\n\n      allGridCells.forEach(cell => {\n        totalHeight += cell.offsetHeight;\n      });\n      this.actualGridSizeY = totalHeight / cellCount;\n    },\n\n    calculateAffectedCells() {\n      if (this.previousMousePosition === null) return;\n\n      let mouseX1 = this.previousMousePosition.x;\n      let mouseY1 = this.previousMousePosition.y;\n      let mouseX2 = this.currentMousePosition.x;\n      let mouseY2 = this.currentMousePosition.y;\n\n      let posY = this.gridSize;\n      let posX = 0;\n\n      for (let yy = 0; yy < this.gridHeight; yy++) {\n        posX = 0;\n        for (let xx = 0; xx < this.gridWidth; xx++) {\n          let lineX1 = posX;\n          let lineY1 = posY - this.gridSize;\n\n          const isIntersecting = lineRect(\n            mouseX1,\n            mouseY1,\n            mouseX2,\n            mouseY2,\n            lineX1,\n            lineY1,\n            this.gridSize,\n            this.gridSize,\n          );\n\n          if (isIntersecting) {\n            this.setTile(\n              this.grid[yy][xx],\n              this.mouseDownInitialCellTile,\n            );\n          }\n\n          posX += this.gridSize;\n        }\n        posY += this.gridSize;\n      }\n    },\n\n    handleSingleClick(event) {\n      this.setMousePosition(event);\n\n      const mouseX = this.currentMousePosition.x;\n      const mouseY = this.currentMousePosition.y;\n\n      const gridX = Math.floor(mouseX / this.actualGridSizeX);\n      const gridY = Math.floor(mouseY / this.actualGridSizeY);\n\n      this.mouseDownInitialCellTile = this.grid[gridY][gridX].tile;\n\n      this.setTile(this.grid[gridY][gridX]);\n    },\n\n    getCell(x, y) {\n      return this.grid[y][x];\n    },\n\n    setTile(cell, type = null) {\n      if (cell.tile === 'START' || cell.tile === 'END') return;\n\n      if (type === null) {\n        if (cell.tile === 'NONE') cell.tile = 'WALL';\n        else if (cell.tile === 'WALL') cell.tile = 'NONE';\n        else if (cell.tile === 'PATH') cell.tile = 'WALL';\n      } else if (type === 'NONE') {\n        cell.tile = 'WALL';\n      } else if (type === 'WALL') {\n        cell.tile = 'NONE';\n      } else if (type === 'PATH') {\n        cell.tile = 'WALL';\n      }\n    },\n\n    /*\n      Let the node at which we are starting be called the initial node. Let the distance of node Y be the distance from the initial node to Y. Dijkstra's algorithm will assign some initial distance values and will try to improve them step by step.\n\n      1. Mark all nodes unvisited. Create a set of all the unvisited nodes called the unvisited set.\n      2. Assign to every node a tentative distance value: set it to zero for our initial node and to infinity for all other nodes. Set the initial node as current.[16]\n      3. For the current node, consider all of its unvisited neighbours and calculate their tentative distances through the current node. Compare the newly calculated tentative distance to the current assigned value and assign the smaller one. For example, if the current node A is marked with a distance of 6, and the edge connecting it with a neighbour B has length 2, then the distance to B through A will be 6 + 2 = 8. If B was previously marked with a distance greater than 8 then change it to 8. Otherwise, the current value will be kept.\n      4. When we are done considering all of the unvisited neighbours of the current node, mark the current node as visited and remove it from the unvisited set. A visited node will never be checked again.\n      5. If the destination node has been marked visited (when planning a route between two specific nodes) or if the smallest tentative distance among the nodes in the unvisited set is infinity (when planning a complete traversal; occurs when there is no connection between the initial node and remaining unvisited nodes), then stop. The algorithm has finished.\n      6. Otherwise, select the unvisited node that is marked with the smallest tentative distance, set it as the new \"current node\", and go back to step 3.\n      7. When planning a route, it is actually not necessary to wait until the destination node is \"visited\" as above: the algorithm can stop once the destination node has the smallest tentative distance among all \"unvisited\" nodes (and thus could be selected as the next \"current\").\n    */\n    dijkstra() {\n      if (this.startCell === '') return;\n      this.calculating = true;\n      this.removePath();\n\n      const DISTANCE = 999999;\n\n      let unvisited = [];\n      this.grid.forEach(gridRow => {\n        let subGrid = [];\n        gridRow.forEach(gridCell => {\n          let newCell = Object.assign({}, gridCell);\n          newCell.unvisited = gridCell.tile !== 'WALL';\n          newCell.distance = DISTANCE;\n          subGrid.push(newCell);\n        });\n        unvisited.push(subGrid);\n      });\n\n      const startCoordinates = this.startCell.split(',');\n      let x = parseInt(startCoordinates[0]);\n      let y = parseInt(startCoordinates[1]);\n      let current = unvisited[y][x];\n      current.distance = 0;\n\n      const calculateDistance = async (current, x, y) => {\n        if (this.abortCalculating) {\n          this.abortCalculating = false;\n          this.calculating = false;\n          return;\n        }\n        let top = null;\n        let right = null;\n        let bottom = null;\n        let left = null;\n\n        if (y - 1 > -1) top = unvisited[y - 1][x];\n        if (x + 1 < this.gridWidth) right = unvisited[y][x + 1];\n        if (y + 1 < this.gridHeight) bottom = unvisited[y + 1][x];\n        if (x - 1 > -1) left = unvisited[y][x - 1];\n\n        if (top && top.unvisited) {\n          let newDistance = current.distance + 1;\n          if (newDistance < top.distance) {\n            top.distance = newDistance;\n          }\n        }\n        if (right && right.unvisited) {\n          let newDistance = current.distance + 1;\n          if (newDistance < right.distance) {\n            right.distance = newDistance;\n          }\n        }\n        if (bottom && bottom.unvisited) {\n          let newDistance = current.distance + 1;\n          if (newDistance < bottom.distance) {\n            bottom.distance = newDistance;\n          }\n        }\n        if (left && left.unvisited) {\n          let newDistance = current.distance + 1;\n          if (newDistance < left.distance) {\n            left.distance = newDistance;\n          }\n        }\n\n        current.unvisited = false;\n\n        if (current.coordinates !== this.endCell) {\n          let smallestDistance = 999999;\n          let newCurrent = false;\n          unvisited.forEach((gridRow, yy) => {\n            gridRow.forEach((gridCell, xx) => {\n              if (\n                gridCell.unvisited &&\n                gridCell.distance < smallestDistance\n              ) {\n                newCurrent = true;\n                smallestDistance = gridCell.distance;\n                current = gridCell;\n                x = xx;\n                y = yy;\n              }\n            });\n          });\n\n          if (newCurrent) {\n            await this.sleep(5);\n            calculateDistance(current, x, y);\n          } else {\n            this.resultMessage = 'No path found';\n            this.calculating = false;\n          }\n\n          this.$nextTick(() => {\n            this.grid = unvisited;\n          });\n        } else {\n          this.resultMessage = `Distance to endCell is ${current.distance}`;\n          this.calculating = false;\n\n          this.$nextTick(() => {\n            this.grid = unvisited;\n            this.calculatePath(unvisited);\n          });\n        }\n      };\n\n      calculateDistance(current, x, y);\n    },\n\n    calculatePath(grid) {\n      let path = [];\n      let currentDistance = 0;\n\n      const endCellCoordinates = this.endCell.split(',');\n      let current =\n        grid[parseInt(endCellCoordinates[1])][\n          parseInt(endCellCoordinates[0])\n        ];\n\n      const loop = (grid, current) => {\n        currentDistance = current.distance;\n        if (currentDistance < 2) return;\n\n        const coordinates = current.coordinates.split(',');\n        let x = parseInt(coordinates[0]);\n        let y = parseInt(coordinates[1]);\n\n        // Find neighbour node where node.distance === current.distance - 1\n        let top = null;\n        let right = null;\n        let bottom = null;\n        let left = null;\n\n        if (y - 1 > -1) top = grid[y - 1][x];\n        if (x + 1 < this.gridWidth) right = grid[y][x + 1];\n        if (y + 1 < this.gridHeight) bottom = grid[y + 1][x];\n        if (x - 1 > -1) left = grid[y][x - 1];\n\n        let smallestDistance = currentDistance;\n        if (\n          top &&\n          top.distance < smallestDistance &&\n          top.tile !== 'WALL'\n        ) {\n          smallestDistance = top.distance;\n          current = top;\n        } else if (\n          right &&\n          right.distance < smallestDistance &&\n          right.tile !== 'WALL'\n        ) {\n          smallestDistance = right.distance;\n          current = right;\n        } else if (\n          bottom &&\n          bottom.distance < smallestDistance &&\n          bottom.tile !== 'WALL'\n        ) {\n          smallestDistance = bottom.distance;\n          current = bottom;\n        } else if (\n          left &&\n          left.distance < smallestDistance &&\n          left.tile !== 'WALL'\n        ) {\n          smallestDistance = left.distance;\n          current = left;\n        }\n\n        // Add node to path\n        path.push(current);\n\n        loop(grid, current);\n      };\n\n      loop(grid, current);\n\n      path = path.reverse();\n\n      this.drawPath(path);\n    },\n\n    async drawPath(path) {\n      let newGrid = this.grid;\n\n      this.drawing = true;\n\n      for (let ii = 0; ii < path.length; ii++) {\n        if (this.abortDrawing) {\n          this.abortDrawing = false;\n          this.drawing = false;\n          break;\n        }\n        let cell = path[ii];\n        const splitCoordinates = cell.coordinates.split(',');\n        newGrid[splitCoordinates[1]][splitCoordinates[0]].tile =\n          'PATH';\n\n        this.$nextTick(() => {\n          this.grid = newGrid;\n        });\n\n        await this.sleep(this.pathDrawSpeed);\n      }\n\n      this.abortDrawing = false;\n      this.drawing = false;\n    },\n\n    removePath() {\n      this.grid.forEach(gridCol => {\n        gridCol.forEach(gridCell => {\n          gridCell.tile =\n            gridCell.tile === 'PATH' ? 'NONE' : gridCell.tile;\n        });\n      });\n    },\n\n    sleep(timeInMs) {\n      return new Promise(resolve => {\n        setTimeout(resolve, timeInMs);\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.Grid {\n  height: 100vh;\n  width: 100vw;\n  display: grid;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Grid.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Grid.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Grid.vue?vue&type=template&id=dfa95cd8&scoped=true&\"\nimport script from \"./Grid.vue?vue&type=script&lang=js&\"\nexport * from \"./Grid.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Grid.vue?vue&type=style&index=0&id=dfa95cd8&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"dfa95cd8\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <div class=\"debug\" v-if=\"showDebugger\">\n      startCell: {{ startCell }}<br />\n      endCell: {{ endCell }} <br />\n      <br />\n      <span @click=\"dijkstra\">Start Dijkstra</span>\n      <br /><br />\n      <span @click=\"init\">Reset</span>\n      <br /><br />\n      <div>Result message: {{ resultMessage }}</div>\n    </div>\n\n    <Grid />\n  </div>\n</template>\n\n<script>\nimport Grid from '@/components/Grid.vue';\n\nexport default {\n  name: 'App',\n\n  components: {\n    Grid,\n  },\n\n  data() {\n    return {\n      showDebugger: false,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\">\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100vh;\n  background: #eee;\n  box-sizing: border-box;\n\n  display: grid;\n  grid-template-rows: repeat(100px, auto);\n  justify-content: center;\n}\n\n.debug {\n  align-self: center;\n  text-align: left;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=5f49d635&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport App from \"./App.vue\";\n\nVue.config.productionTip = false;\n\nnew Vue({\n  render: h => h(App)\n}).$mount(\"#app\");\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GridCell.vue?vue&type=style&index=0&id=091d9c74&lang=scss&scoped=true&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Grid.vue?vue&type=style&index=0&id=dfa95cd8&lang=scss&scoped=true&\""],"sourceRoot":""}